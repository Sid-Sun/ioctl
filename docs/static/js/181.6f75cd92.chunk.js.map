{"version":3,"file":"static/js/181.6f75cd92.chunk.js","mappings":"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","sources":["../node_modules/@lezer/xml/dist/index.es.js","../node_modules/@codemirror/lang-xml/dist/index.js"],"sourcesContent":["import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { styleTags, tags } from '@lezer/highlight';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst StartTag = 1,\n  StartCloseTag = 2,\n  MissingCloseTag = 3,\n  mismatchedStartCloseTag = 4,\n  incompleteStartCloseTag = 5,\n  commentContent$1 = 35,\n  piContent$1 = 36,\n  cdataContent$1 = 37,\n  Element = 11,\n  OpenTag = 13;\n\n/* Hand-written tokenizer for XML tag matching. */\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedInput == input && cachedPos == pos) return cachedName\n  while (isSpace(input.peek(offset))) offset++;\n  let name = \"\";\n  for (;;) {\n    let next = input.peek(offset);\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    offset++;\n  }\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name || null\n}\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n  this.hash = parent ? parent.hash : 0;\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\n}\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return term == StartTag ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, _stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  hash(context) { return context ? context.hash : 0 },\n  strict: false\n});\n\nconst startTag = new ExternalTokenizer((input, stack) => {\n  if (input.next != 60 /* '<' */) return\n  input.advance();\n  if (input.next == 47 /* '/' */) {\n    input.advance();\n    let name = tagNameAfter(input, 0);\n    if (!name) return input.acceptToken(incompleteStartCloseTag)\n    if (stack.context && name == stack.context.name) return input.acceptToken(StartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return input.acceptToken(MissingCloseTag, -2)\n    input.acceptToken(mismatchedStartCloseTag);\n  } else if (input.next != 33 /* '!' */ && input.next != 63 /* '?' */) {\n    return input.acceptToken(StartTag)\n  }\n}, {contextual: true});\n\nfunction scanTo(type, end) {\n  return new ExternalTokenizer(input => {\n    for (let endPos = 0, len = 0;; len++) {\n      if (input.next < 0) {\n        if (len) input.acceptToken(type);\n        break\n      } \n      if (input.next == end.charCodeAt(endPos)) {\n        endPos++;\n        if (endPos == end.length) {\n          if (len > end.length) input.acceptToken(type, 1 - end.length);\n          break\n        }\n      } else {\n        endPos = input.next == end.charCodeAt(0) ? 1 : 0;\n      }\n      input.advance();\n    }\n  })\n}\n\nconst commentContent = scanTo(commentContent$1, \"-->\");\nconst piContent = scanTo(piContent$1, \"?>\");\nconst cdataContent = scanTo(cdataContent$1, \"]]>\");\n\nconst xmlHighlighting = styleTags({\n  Text: tags.content,\n  \"StartTag StartCloseTag EndTag SelfCloseEndTag\": tags.angleBracket,\n  TagName: tags.tagName,\n  \"MismatchedCloseTag/Tagname\": [tags.tagName, tags.invalid],\n  AttributeName: tags.attributeName,\n  AttributeValue: tags.attributeValue,\n  Is: tags.definitionOperator,\n  \"EntityReference CharacterReference\": tags.character,\n  Comment: tags.blockComment,\n  ProcessingInst: tags.processingInstruction,\n  DoctypeDecl: tags.documentMeta,\n  Cdata: tags.special(tags.string)\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 14,\n  states: \",SOQOaOOOrOxO'#CfOzOpO'#CiO!tOaO'#CgOOOP'#Cg'#CgO!{OrO'#CrO#TOtO'#CsO#]OpO'#CtOOOP'#DS'#DSOOOP'#Cv'#CvQQOaOOOOOW'#Cw'#CwO#eOxO,59QOOOP,59Q,59QOOOO'#Cx'#CxO#mOpO,59TO#uO!bO,59TOOOP'#C{'#C{O$TOaO,59RO$[OpO'#CoOOOP,59R,59ROOOQ'#C|'#C|O$dOrO,59^OOOP,59^,59^OOOS'#C}'#C}O$lOtO,59_OOOP,59_,59_O$tOpO,59`O$|OpO,59`OOOP-E6t-E6tOOOW-E6u-E6uOOOP1G.l1G.lOOOO-E6v-E6vO%UO!bO1G.oO%UO!bO1G.oO%dOpO'#CkO%lO!bO'#CyO%zO!bO1G.oOOOP1G.o1G.oOOOP1G.w1G.wOOOP-E6y-E6yOOOP1G.m1G.mO&VOpO,59ZO&_OpO,59ZOOOQ-E6z-E6zOOOP1G.x1G.xOOOS-E6{-E6{OOOP1G.y1G.yO&gOpO1G.zO&gOpO1G.zOOOP1G.z1G.zO&oO!bO7+$ZO&}O!bO7+$ZOOOP7+$Z7+$ZOOOP7+$c7+$cO'YOpO,59VO'bOpO,59VO'jO!bO,59eOOOO-E6w-E6wO'xOpO1G.uO'xOpO1G.uOOOP1G.u1G.uO(QOpO7+$fOOOP7+$f7+$fO(YO!bO<<GuOOOP<<Gu<<GuOOOP<<G}<<G}O'bOpO1G.qO'bOpO1G.qO(eO#tO'#CnOOOO1G.q1G.qO(sOpO7+$aOOOP7+$a7+$aOOOP<<HQ<<HQOOOPAN=aAN=aOOOPAN=iAN=iO'bOpO7+$]OOOO7+$]7+$]OOOO'#Cz'#CzO({O#tO,59YOOOO,59Y,59YOOOP<<G{<<G{OOOO<<Gw<<GwOOOO-E6x-E6xOOOO1G.t1G.t\",\n  stateData: \")Z~OPQOSVOTWOVWOWWOXWOiXOxPO}TO!PUO~OuZOw]O~O^`Oy^O~OPQOQcOSVOTWOVWOWWOXWOxPO}TO!PUO~ORdO~P!SOseO|gO~OthO!OjO~O^lOy^O~OuZOwoO~O^qOy^O~O[vO`sOdwOy^O~ORyO~P!SO^{Oy^O~OseO|}O~OthO!O!PO~O^!QOy^O~O[!SOy^O~O[!VO`sOd!WOy^O~Oa!YOy^O~Oy^O[mX`mXdmX~O[!VO`sOd!WO~O^!]Oy^O~O[!_Oy^O~O[!aOy^O~O[!cO`sOd!dOy^O~O[!cO`sOd!dO~Oa!eOy^O~Oy^Oz!gO~Oy^O[ma`madma~O[!jOy^O~O[!kOy^O~O[!lO`sOd!mO~OW!pOX!pOz!rO{!pO~O[!sOy^O~OW!pOX!pOz!vO{!pO~O\",\n  goto: \"%[wPPPPPPPPPPxxP!OP!UPP!_!iP!oxxxP!u!{#R$Z$j$p$v$|PPPP%SXWORYbXRORYb_t`qru!T!U!bQ!h!YS!o!e!fR!t!nQdRRybXSORYbQYORmYQ[PRn[Q_QQkVjp_krz!R!T!X!Z!^!`!f!i!nQr`QzcQ!RlQ!TqQ!XsQ!ZtQ!^{Q!`!QQ!f!YQ!i!]R!n!eQu`S!UqrU![u!U!bR!b!TQ!q!gR!u!qQbRRxbQfTR|fQiUR!OiSXOYTaRb\",\n  nodeNames: \"⚠ StartTag StartCloseTag MissingCloseTag StartCloseTag StartCloseTag Document Text EntityReference CharacterReference Cdata Element EndTag OpenTag TagName Attribute AttributeName Is AttributeValue CloseTag SelfCloseEndTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag DoctypeDecl\",\n  maxTerm: 47,\n  context: elementContext,\n  nodeProps: [\n    [\"closedBy\", 1,\"SelfCloseEndTag EndTag\",13,\"CloseTag MissingCloseTag\"],\n    [\"openedBy\", 12,\"StartTag StartCloseTag\",19,\"OpenTag\",20,\"StartTag\"]\n  ],\n  propSources: [xmlHighlighting],\n  skippedNodes: [0],\n  repeatNodeCount: 8,\n  tokenData: \"Az~R!WOX$kXY%rYZ%rZ]$k]^%r^p$kpq%rqr$krs&tsv$kvw'Uw}$k}!O(q!O!P$k!P!Q*n!Q![$k![!]+z!]!^$k!^!_/s!_!`=i!`!a>U!a!b>q!b!c$k!c!}+z!}#P$k#P#Q?}#Q#R$k#R#S+z#S#T$k#T#o+z#o%W$k%W%o+z%o%p$k%p&a+z&a&b$k&b1p+z1p4U$k4U4d+z4d4e$k4e$IS+z$IS$I`$k$I`$Ib+z$Ib$Kh$k$Kh%#t+z%#t&/x$k&/x&Et+z&Et&FV$k&FV;'S+z;'S;:j/S;:j?&r$k?&r?Ah+z?Ah?BY$k?BY?Mn+z?Mn~$kX$rUVP{WOr$krs%Usv$kw!^$k!^!_%d!_~$kP%ZRVPOv%Uw!^%U!_~%UW%iR{WOr%dsv%dw~%d_%{]VP{WyUOX$kXY%rYZ%rZ]$k]^%r^p$kpq%rqr$krs%Usv$kw!^$k!^!_%d!_~$kZ&{RzYVPOv%Uw!^%U!_~%U~'XTOp'hqs'hst(Pt!]'h!^~'h~'kTOp'hqs'ht!]'h!]!^'z!^~'h~(POW~~(SROp(]q!](]!^~(]~(`SOp(]q!](]!]!^(l!^~(]~(qOX~Z(xWVP{WOr$krs%Usv$kw}$k}!O)b!O!^$k!^!_%d!_~$kZ)iWVP{WOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!a*R!a~$kZ*[U|QVP{WOr$krs%Usv$kw!^$k!^!_%d!_~$k]*uWVP{WOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!a+_!a~$k]+hUdSVP{WOr$krs%Usv$kw!^$k!^!_%d!_~$k_,V}`S^QVP{WOr$krs%Usv$kw}$k}!O+z!O!P+z!P!Q$k!Q![+z![!]+z!]!^$k!^!_%d!_!c$k!c!}+z!}#R$k#R#S+z#S#T$k#T#o+z#o$}$k$}%O+z%O%W$k%W%o+z%o%p$k%p&a+z&a&b$k&b1p+z1p4U+z4U4d+z4d4e$k4e$IS+z$IS$I`$k$I`$Ib+z$Ib$Je$k$Je$Jg+z$Jg$Kh$k$Kh%#t+z%#t&/x$k&/x&Et+z&Et&FV$k&FV;'S+z;'S;:j/S;:j?&r$k?&r?Ah+z?Ah?BY$k?BY?Mn+z?Mn~$k_/ZWVP{WOr$krs%Usv$kw!^$k!^!_%d!_;=`$k;=`<%l+z<%l~$kX/xU{WOq%dqr0[sv%dw!a%d!a!b=X!b~%dX0aZ{WOr%dsv%dw}%d}!O1S!O!f%d!f!g1x!g!}%d!}#O5s#O#W%d#W#X:k#X~%dX1XT{WOr%dsv%dw}%d}!O1h!O~%dX1oR}P{WOr%dsv%dw~%dX1}T{WOr%dsv%dw!q%d!q!r2^!r~%dX2cT{WOr%dsv%dw!e%d!e!f2r!f~%dX2wT{WOr%dsv%dw!v%d!v!w3W!w~%dX3]T{WOr%dsv%dw!{%d!{!|3l!|~%dX3qT{WOr%dsv%dw!r%d!r!s4Q!s~%dX4VT{WOr%dsv%dw!g%d!g!h4f!h~%dX4kV{WOr4frs5Qsv4fvw5Qw!`4f!`!a5c!a~4fP5TRO!`5Q!`!a5^!a~5QP5cOiPX5jRiP{WOr%dsv%dw~%dX5xV{WOr%dsv%dw!e%d!e!f6_!f#V%d#V#W8w#W~%dX6dT{WOr%dsv%dw!f%d!f!g6s!g~%dX6xT{WOr%dsv%dw!c%d!c!d7X!d~%dX7^T{WOr%dsv%dw!v%d!v!w7m!w~%dX7rT{WOr%dsv%dw!c%d!c!d8R!d~%dX8WT{WOr%dsv%dw!}%d!}#O8g#O~%dX8nR{WxPOr%dsv%dw~%dX8|T{WOr%dsv%dw#W%d#W#X9]#X~%dX9bT{WOr%dsv%dw#T%d#T#U9q#U~%dX9vT{WOr%dsv%dw#h%d#h#i:V#i~%dX:[T{WOr%dsv%dw#T%d#T#U8R#U~%dX:pT{WOr%dsv%dw#c%d#c#d;P#d~%dX;UT{WOr%dsv%dw#V%d#V#W;e#W~%dX;jT{WOr%dsv%dw#h%d#h#i;y#i~%dX<OT{WOr%dsv%dw#m%d#m#n<_#n~%dX<dT{WOr%dsv%dw#d%d#d#e<s#e~%dX<xT{WOr%dsv%dw#X%d#X#Y4f#Y~%dX=`R!PP{WOr%dsv%dw~%dZ=rUaQVP{WOr$krs%Usv$kw!^$k!^!_%d!_~$k_>_U[UVP{WOr$krs%Usv$kw!^$k!^!_%d!_~$kZ>xWVP{WOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!a?b!a~$kZ?kU!OQVP{WOr$krs%Usv$kw!^$k!^!_%d!_~$kZ@UWVP{WOr$krs%Usv$kw!^$k!^!_%d!_#P$k#P#Q@n#Q~$kZ@uWVP{WOr$krs%Usv$kw!^$k!^!_%d!_!`$k!`!aA_!a~$kZAhUwQVP{WOr$krs%Usv$kw!^$k!^!_%d!_~$k\",\n  tokenizers: [startTag, commentContent, piContent, cdataContent, 0, 1, 2, 3],\n  topRules: {\"Document\":[0,6]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/xml';\nimport { syntaxTree, LRLanguage, indentNodeProp, foldNodeProp, LanguageSupport } from '@codemirror/language';\n\nfunction tagName(doc, tag) {\n    let name = tag && tag.getChild(\"TagName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction elementName(doc, tree) {\n    let tag = tree && tree.firstChild;\n    return !tag || tag.name != \"OpenTag\" ? \"\" : tagName(doc, tag);\n}\nfunction attrName(doc, tag, pos) {\n    let attr = tag && tag.getChildren(\"Attribute\").find(a => a.from <= pos && a.to >= pos);\n    let name = attr && attr.getChild(\"AttributeName\");\n    return name ? doc.sliceString(name.from, name.to) : \"\";\n}\nfunction findParentElement(tree) {\n    for (let cur = tree && tree.parent; cur; cur = cur.parent)\n        if (cur.name == \"Element\")\n            return cur;\n    return null;\n}\nfunction findLocation(state, pos) {\n    var _a;\n    let at = syntaxTree(state).resolveInner(pos, -1), inTag = null;\n    for (let cur = at; !inTag && cur.parent; cur = cur.parent)\n        if (cur.name == \"OpenTag\" || cur.name == \"CloseTag\" || cur.name == \"SelfClosingTag\" || cur.name == \"MismatchedCloseTag\")\n            inTag = cur;\n    if (inTag && (inTag.to > pos || inTag.lastChild.type.isError)) {\n        let elt = inTag.parent;\n        if (at.name == \"TagName\")\n            return inTag.name == \"CloseTag\" || inTag.name == \"MismatchedCloseTag\"\n                ? { type: \"closeTag\", from: at.from, context: elt }\n                : { type: \"openTag\", from: at.from, context: findParentElement(elt) };\n        if (at.name == \"AttributeName\")\n            return { type: \"attrName\", from: at.from, context: inTag };\n        if (at.name == \"AttributeValue\")\n            return { type: \"attrValue\", from: at.from, context: inTag };\n        let before = at == inTag || at.name == \"Attribute\" ? at.childBefore(pos) : at;\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartTag\")\n            return { type: \"openTag\", from: pos, context: findParentElement(elt) };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"StartCloseTag\" && before.to <= pos)\n            return { type: \"closeTag\", from: pos, context: elt };\n        if ((before === null || before === void 0 ? void 0 : before.name) == \"Is\")\n            return { type: \"attrValue\", from: pos, context: inTag };\n        if (before)\n            return { type: \"attrName\", from: pos, context: inTag };\n        return null;\n    }\n    else if (at.name == \"StartCloseTag\") {\n        return { type: \"closeTag\", from: pos, context: at.parent };\n    }\n    while (at.parent && at.to == pos && !((_a = at.lastChild) === null || _a === void 0 ? void 0 : _a.type.isError))\n        at = at.parent;\n    if (at.name == \"Element\" || at.name == \"Text\" || at.name == \"Document\")\n        return { type: \"tag\", from: pos, context: at.name == \"Element\" ? at : findParentElement(at) };\n    return null;\n}\nclass Element {\n    constructor(spec, attrs, attrValues) {\n        this.attrs = attrs;\n        this.attrValues = attrValues;\n        this.children = [];\n        this.name = spec.name;\n        this.completion = Object.assign(Object.assign({ type: \"type\" }, spec.completion || {}), { label: this.name });\n        this.openCompletion = Object.assign(Object.assign({}, this.completion), { label: \"<\" + this.name });\n        this.closeCompletion = Object.assign(Object.assign({}, this.completion), { label: \"</\" + this.name + \">\", boost: 2 });\n        this.closeNameCompletion = Object.assign(Object.assign({}, this.completion), { label: this.name + \">\" });\n        this.text = spec.textContent ? spec.textContent.map(s => ({ label: s, type: \"text\" })) : [];\n    }\n}\nconst Identifier = /^[:\\-\\.\\w\\u00b7-\\uffff]*$/;\nfunction attrCompletion(spec) {\n    return Object.assign(Object.assign({ type: \"property\" }, spec.completion || {}), { label: spec.name });\n}\nfunction valueCompletion(spec) {\n    return typeof spec == \"string\" ? { label: `\"${spec}\"`, type: \"constant\" }\n        : /^\"/.test(spec.label) ? spec\n            : Object.assign(Object.assign({}, spec), { label: `\"${spec.label}\"` });\n}\n/**\nCreate a completion source for the given schema.\n*/\nfunction completeFromSchema(eltSpecs, attrSpecs) {\n    let allAttrs = [], globalAttrs = [];\n    let attrValues = Object.create(null);\n    for (let s of attrSpecs) {\n        let completion = attrCompletion(s);\n        allAttrs.push(completion);\n        if (s.global)\n            globalAttrs.push(completion);\n        if (s.values)\n            attrValues[s.name] = s.values.map(valueCompletion);\n    }\n    let allElements = [], topElements = [];\n    let byName = Object.create(null);\n    for (let s of eltSpecs) {\n        let attrs = globalAttrs, attrVals = attrValues;\n        if (s.attributes)\n            attrs = attrs.concat(s.attributes.map(s => {\n                if (typeof s == \"string\")\n                    return allAttrs.find(a => a.label == s) || { label: s, type: \"property\" };\n                if (s.values) {\n                    if (attrVals == attrValues)\n                        attrVals = Object.create(attrVals);\n                    attrVals[s.name] = s.values.map(valueCompletion);\n                }\n                return attrCompletion(s);\n            }));\n        let elt = new Element(s, attrs, attrVals);\n        byName[elt.name] = elt;\n        allElements.push(elt);\n        if (s.top)\n            topElements.push(elt);\n    }\n    if (!topElements.length)\n        topElements = allElements;\n    for (let i = 0; i < allElements.length; i++) {\n        let s = eltSpecs[i], elt = allElements[i];\n        if (s.children) {\n            for (let ch of s.children)\n                if (byName[ch])\n                    elt.children.push(byName[ch]);\n        }\n        else {\n            elt.children = allElements;\n        }\n    }\n    return cx => {\n        var _a;\n        let { doc } = cx.state, loc = findLocation(cx.state, cx.pos);\n        if (!loc || (loc.type == \"tag\" && !cx.explicit))\n            return null;\n        let { type, from, context } = loc;\n        if (type == \"openTag\") {\n            let children = topElements;\n            let parentName = elementName(doc, context);\n            if (parentName) {\n                let parent = byName[parentName];\n                children = (parent === null || parent === void 0 ? void 0 : parent.children) || allElements;\n            }\n            return {\n                from,\n                options: children.map(ch => ch.completion),\n                validFor: Identifier\n            };\n        }\n        else if (type == \"closeTag\") {\n            let parentName = elementName(doc, context);\n            return parentName ? {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == \">\" ? 1 : 0),\n                options: [((_a = byName[parentName]) === null || _a === void 0 ? void 0 : _a.closeNameCompletion) || { label: parentName + \">\", type: \"type\" }],\n                validFor: Identifier\n            } : null;\n        }\n        else if (type == \"attrName\") {\n            let parent = byName[tagName(doc, context)];\n            return {\n                from,\n                options: (parent === null || parent === void 0 ? void 0 : parent.attrs) || globalAttrs,\n                validFor: Identifier\n            };\n        }\n        else if (type == \"attrValue\") {\n            let attr = attrName(doc, context, from);\n            if (!attr)\n                return null;\n            let parent = byName[tagName(doc, context)];\n            let values = ((parent === null || parent === void 0 ? void 0 : parent.attrValues) || attrValues)[attr];\n            if (!values || !values.length)\n                return null;\n            return {\n                from,\n                to: cx.pos + (doc.sliceString(cx.pos, cx.pos + 1) == '\"' ? 1 : 0),\n                options: values,\n                validFor: /^\"[^\"]*\"?$/\n            };\n        }\n        else if (type == \"tag\") {\n            let parentName = elementName(doc, context), parent = byName[parentName];\n            let closing = [], last = context && context.lastChild;\n            if (parentName && (!last || last.name != \"CloseTag\" || tagName(doc, last) != parentName))\n                closing.push(parent ? parent.closeCompletion : { label: \"</\" + parentName + \">\", type: \"type\", boost: 2 });\n            let options = closing.concat(((parent === null || parent === void 0 ? void 0 : parent.children) || (context ? allElements : topElements)).map(e => e.openCompletion));\n            if (context && (parent === null || parent === void 0 ? void 0 : parent.text.length)) {\n                let openTag = context.firstChild;\n                if (openTag.to > cx.pos - 20 && !/\\S/.test(cx.state.sliceDoc(openTag.to, cx.pos)))\n                    options = options.concat(parent.text);\n            }\n            return {\n                from,\n                options,\n                validFor: /^<\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/\n            };\n        }\n        else {\n            return null;\n        }\n    };\n}\n\n/**\nA language provider based on the [Lezer XML\nparser](https://github.com/lezer-parser/xml), extended with\nhighlighting and indentation information.\n*/\nconst xmlLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Element(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"OpenTag CloseTag SelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Element(subtree) {\n                    let first = subtree.firstChild, last = subtree.lastChild;\n                    if (!first || first.name != \"OpenTag\")\n                        return null;\n                    return { from: first.to, to: last.name == \"CloseTag\" ? last.from : subtree.to };\n                }\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"<!--\", close: \"-->\" } },\n        indentOnInput: /^\\s*<\\/$/\n    }\n});\n/**\nXML language support. Includes schema-based autocompletion when\nconfigured.\n*/\nfunction xml(conf = {}) {\n    return new LanguageSupport(xmlLanguage, xmlLanguage.data.of({\n        autocomplete: completeFromSchema(conf.elements || [], conf.attributes || [])\n    }));\n}\n\nexport { completeFromSchema, xml, xmlLanguage };\n"],"names":["nameChar","ch","cachedName","cachedInput","cachedPos","tagNameAfter","input","offset","pos","peek","name","next","String","fromCharCode","ElementContext","parent","this","hash","i","length","charCodeAt","elementContext","ContextTracker","start","shift","context","term","stack","reduce","reuse","node","_stack","type","id","strict","startTag","ExternalTokenizer","advance","acceptToken","cx","contextual","scanTo","end","endPos","len","commentContent","piContent","cdataContent","xmlHighlighting","styleTags","Text","tags","TagName","AttributeName","AttributeValue","Is","Comment","ProcessingInst","DoctypeDecl","Cdata","parser","LRParser","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","propSources","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","tokenPrec","tagName","doc","tag","getChild","sliceString","from","to","elementName","tree","firstChild","findParentElement","cur","Element","spec","attrs","attrValues","children","completion","Object","assign","label","openCompletion","closeCompletion","boost","closeNameCompletion","text","textContent","map","s","Identifier","attrCompletion","valueCompletion","test","completeFromSchema","eltSpecs","attrSpecs","allAttrs","globalAttrs","create","push","global","values","allElements","topElements","byName","attrVals","attributes","concat","find","a","elt","top","_a","state","loc","at","syntaxTree","resolveInner","inTag","lastChild","isError","before","childBefore","findLocation","explicit","parentName","options","validFor","attr","getChildren","attrName","closing","last","e","openTag","sliceDoc","xmlLanguage","LRLanguage","configure","props","indentNodeProp","closed","textAfter","lineIndent","unit","column","foldNodeProp","subtree","first","languageData","commentTokens","block","open","close","indentOnInput","xml","conf","LanguageSupport","data","of","autocomplete","elements"],"sourceRoot":""}